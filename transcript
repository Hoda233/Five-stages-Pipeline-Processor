# Compile of alu.v was successful.
# Compile of control_unit.v was successful.
# Compile of instruction_memory.v was successful.
# Compile of read_file.v was successful.
# Compile of data_stack_memory.v was successful.
# Compile of integration_file.v was successful.
# Compile of decode_ciruit.v was successful.
# Compile of mux_generic.v was successful.
# Compile of sign_extend.v was successful.
# Compile of integration_phase_1.v was successful.
# Compile of buffer.v was successful.
# 11 compiles, 0 failed with no errors.
vsim -gui work.integration_1
# vsim -gui work.integration_1 
# Start time: 09:22:16 on Nov 23,2022
# Loading work.integration_1
# Loading work.instruction_memory
# Loading work.read_file
# Loading work.buffer
# Loading work.control_unit
# Loading work.decode_ciruit
# Loading work.alu
# Loading work.sign_extend
# Loading work.data_stack_memory
# Loading work.mux_generic
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
# ** Warning: (vsim-3015) [PCDPC] - Port size (89) does not match connection size (80) for port 'read_data'. The port definition is at: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/buffer.v(2).
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/buffer_decode File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/integration_phase_1.v Line: 101
# ** Warning: (vsim-3015) [PCDPC] - Port size (89) does not match connection size (80) for port 'write_data'. The port definition is at: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/buffer.v(2).
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/buffer_decode File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/integration_phase_1.v Line: 101
# ** Error (suppressible): (vsim-3389) Port 'clk' not found in the connected module (5th connection).
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/alu_stage File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/integration_phase_1.v Line: 118
# Error loading design
# End time: 09:22:17 on Nov 23,2022, Elapsed time: 0:00:01
# Errors: 1, Warnings: 5
# Compile of integration_phase_1.v was successful.
vsim -gui work.integration_1
# vsim -gui work.integration_1 
# Start time: 09:28:15 on Nov 23,2022
# Loading work.integration_1
# Loading work.instruction_memory
# Loading work.read_file
# Loading work.buffer
# Loading work.control_unit
# Loading work.decode_ciruit
# Loading work.alu
# Loading work.sign_extend
# Loading work.data_stack_memory
# Loading work.mux_generic
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
# ** Error (suppressible): (vsim-3389) Port 'clk' not found in the connected module (5th connection).
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/alu_stage File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/integration_phase_1.v Line: 118
# Error loading design
# End time: 09:28:16 on Nov 23,2022, Elapsed time: 0:00:01
# Errors: 1, Warnings: 3
# Compile of alu.v was successful.
# Compile of control_unit.v was successful.
# Compile of instruction_memory.v was successful.
# Compile of read_file.v was successful.
# Compile of data_stack_memory.v was successful.
# Compile of integration_file.v was successful.
# Compile of decode_ciruit.v was successful.
# Compile of mux_generic.v was successful.
# Compile of sign_extend.v was successful.
# Compile of integration_phase_1.v was successful.
# Compile of buffer.v was successful.
# 11 compiles, 0 failed with no errors.
vsim -gui work.integration_1
# vsim -gui work.integration_1 
# Start time: 09:39:58 on Nov 23,2022
# Loading work.integration_1
# Loading work.instruction_memory
# Loading work.read_file
# Loading work.buffer
# Loading work.control_unit
# Loading work.decode_ciruit
# Loading work.alu
# Loading work.sign_extend
# Loading work.data_stack_memory
# Loading work.mux_generic
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
add wave -position end  sim:/integration_1/clk
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: Asmaa Adel  Hostname: ASMAA-ADEL  ProcessID: 12536
#           Attempting to use alternate WLF file "./wlfterfsea".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlfterfsea
add wave -position end  sim:/integration_1/result
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0000000000000111
add wave -position end  sim:/integration_1/alu_stage/result
run
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
add wave -position end  sim:/integration_1/alu_controls
add wave -position end  sim:/integration_1/clk
add wave -position end  sim:/integration_1/cs_alu_op
add wave -position end  sim:/integration_1/cs_call
add wave -position end  sim:/integration_1/cs_clrc
add wave -position end  sim:/integration_1/cs_int
add wave -position end  sim:/integration_1/cs_jc
add wave -position end  sim:/integration_1/cs_jmp
add wave -position end  sim:/integration_1/cs_jn
add wave -position end  sim:/integration_1/cs_jz
add wave -position end  sim:/integration_1/cs_ldd
add wave -position end  sim:/integration_1/cs_ldm
add wave -position end  sim:/integration_1/cs_mem_op
add wave -position end  sim:/integration_1/cs_mem_read
add wave -position end  sim:/integration_1/cs_mem_write
add wave -position end  sim:/integration_1/CS_NUM
add wave -position end  sim:/integration_1/cs_pop
add wave -position end  sim:/integration_1/cs_push
add wave -position end  sim:/integration_1/cs_reg_write
add wave -position end  sim:/integration_1/cs_reset
add wave -position end  sim:/integration_1/cs_ret
add wave -position end  sim:/integration_1/cs_rti
add wave -position end  sim:/integration_1/cs_setc
add wave -position end  sim:/integration_1/cs_std
add wave -position end  sim:/integration_1/d_alu_controls
add wave -position end  sim:/integration_1/d_alu_op
add wave -position end  sim:/integration_1/d_call
add wave -position end  sim:/integration_1/d_clrc
add wave -position end  sim:/integration_1/d_immediate
add wave -position end  sim:/integration_1/d_int
add wave -position end  sim:/integration_1/d_jc
add wave -position end  sim:/integration_1/d_jmp
add wave -position end  sim:/integration_1/d_jn
add wave -position end  sim:/integration_1/d_jz
add wave -position end  sim:/integration_1/d_ldd
add wave -position end  sim:/integration_1/d_ldm
add wave -position end  sim:/integration_1/d_mem_op
add wave -position end  sim:/integration_1/d_mem_read
add wave -position end  sim:/integration_1/d_mem_write
add wave -position end  sim:/integration_1/d_pop
add wave -position end  sim:/integration_1/d_push
add wave -position end  sim:/integration_1/d_read_add_2
add wave -position end  sim:/integration_1/d_read_data1
add wave -position end  sim:/integration_1/d_read_data2
add wave -position end  sim:/integration_1/d_reg_write
add wave -position end  sim:/integration_1/d_reset
add wave -position end  sim:/integration_1/d_ret
add wave -position end  sim:/integration_1/d_rti
add wave -position end  sim:/integration_1/d_setc
add wave -position end  sim:/integration_1/d_shamt
add wave -position end  sim:/integration_1/d_std
add wave -position end  sim:/integration_1/data
add wave -position end  sim:/integration_1/e_alu_op
add wave -position end  sim:/integration_1/e_call
add wave -position end  sim:/integration_1/e_clrc
add wave -position end  sim:/integration_1/e_flag
add wave -position end  sim:/integration_1/e_immediate
add wave -position end  sim:/integration_1/e_int
add wave -position end  sim:/integration_1/e_jc
add wave -position end  sim:/integration_1/e_jmp
add wave -position end  sim:/integration_1/e_jn
add wave -position end  sim:/integration_1/e_jz
add wave -position end  sim:/integration_1/e_ldd
add wave -position end  sim:/integration_1/e_ldm
add wave -position end  sim:/integration_1/e_mem_op
add wave -position end  sim:/integration_1/e_mem_read
add wave -position end  sim:/integration_1/e_mem_write
add wave -position end  sim:/integration_1/e_pop
add wave -position end  sim:/integration_1/e_push
add wave -position end  sim:/integration_1/e_read_add_2
add wave -position end  sim:/integration_1/e_read_data1
add wave -position end  sim:/integration_1/e_read_data2
add wave -position end  sim:/integration_1/e_reg_write
add wave -position end  sim:/integration_1/e_reset
add wave -position end  sim:/integration_1/e_result
add wave -position end  sim:/integration_1/e_ret
add wave -position end  sim:/integration_1/e_rti
add wave -position end  sim:/integration_1/e_setc
add wave -position end  sim:/integration_1/e_std
add wave -position end  sim:/integration_1/flag
add wave -position end  sim:/integration_1/flag_result
add wave -position end  sim:/integration_1/immediate
add wave -position end  sim:/integration_1/immediate_f
add wave -position end  sim:/integration_1/instuction
add wave -position end  sim:/integration_1/instuction_f
add wave -position end  sim:/integration_1/m_alu_op
add wave -position end  sim:/integration_1/m_call
add wave -position end  sim:/integration_1/m_clrc
add wave -position end  sim:/integration_1/m_data
add wave -position end  sim:/integration_1/m_immediate
add wave -position end  sim:/integration_1/m_int
add wave -position end  sim:/integration_1/m_jc
add wave -position end  sim:/integration_1/m_jmp
add wave -position end  sim:/integration_1/m_jn
add wave -position end  sim:/integration_1/m_jz
add wave -position end  sim:/integration_1/m_ldd
add wave -position end  sim:/integration_1/m_ldm
add wave -position end  sim:/integration_1/m_mem_op
add wave -position end  sim:/integration_1/m_pop
add wave -position end  sim:/integration_1/m_push
add wave -position end  sim:/integration_1/m_read_add_2
add wave -position end  sim:/integration_1/m_reg_write
add wave -position end  sim:/integration_1/m_reset
add wave -position end  sim:/integration_1/m_result
add wave -position end  sim:/integration_1/m_ret
add wave -position end  sim:/integration_1/m_rti
add wave -position end  sim:/integration_1/m_setc
add wave -position end  sim:/integration_1/m_std
add wave -position end  sim:/integration_1/mem_address
add wave -position end  sim:/integration_1/Num_alu
add wave -position end  sim:/integration_1/Num_of_bits
add wave -position end  sim:/integration_1/Num_of_registers
add wave -position end  sim:/integration_1/op2
add wave -position end  sim:/integration_1/op_code_width
add wave -position end  sim:/integration_1/pc
add wave -position end  sim:/integration_1/pc_modified
add wave -position end  sim:/integration_1/pc_width
add wave -position end  sim:/integration_1/pop_width
add wave -position end  sim:/integration_1/read_add_1
add wave -position end  sim:/integration_1/read_add_2
add wave -position end  sim:/integration_1/read_data1
add wave -position end  sim:/integration_1/read_data1_result
add wave -position end  sim:/integration_1/read_data2
add wave -position end  sim:/integration_1/read_data2_result
add wave -position end  sim:/integration_1/result
add wave -position end  sim:/integration_1/selector_1
add wave -position end  sim:/integration_1/selector_2
add wave -position end  sim:/integration_1/selector_3
add wave -position end  sim:/integration_1/selector_4
add wave -position end  sim:/integration_1/selector_5
add wave -position end  sim:/integration_1/selector_6
add wave -position end  sim:/integration_1/selector_7
add wave -position end  sim:/integration_1/sp
add wave -position end  sim:/integration_1/sp_jump
add wave -position end  sim:/integration_1/sp_width
add wave -position end  sim:/integration_1/value
add wave -position end  sim:/integration_1/write_data
add wave -position end  sim:/integration_1/z_value
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0000000000000111
add wave -position end  sim:/integration_1/decode_stage/array_reg
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0000000000000111
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0000000000000111
add wave -position end  sim:/integration_1/cont_unit/alu_controls
# Compile of control_unit.v was successful.
vsim -gui work.integration_1
# End time: 10:01:50 on Nov 23,2022, Elapsed time: 0:21:52
# Errors: 0, Warnings: 3
# vsim -gui work.integration_1 
# Start time: 10:01:50 on Nov 23,2022
# Loading work.integration_1
# Loading work.instruction_memory
# Loading work.read_file
# Loading work.buffer
# Loading work.control_unit
# Loading work.decode_ciruit
# Loading work.alu
# Loading work.sign_extend
# Loading work.data_stack_memory
# Loading work.mux_generic
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
add wave -position end  sim:/integration_1/alu_controls
add wave -position end  sim:/integration_1/clk
add wave -position end  sim:/integration_1/cs_alu_op
add wave -position end  sim:/integration_1/cs_call
add wave -position end  sim:/integration_1/cs_clrc
add wave -position end  sim:/integration_1/cs_int
add wave -position end  sim:/integration_1/cs_jc
add wave -position end  sim:/integration_1/cs_jmp
add wave -position end  sim:/integration_1/cs_jn
add wave -position end  sim:/integration_1/cs_jz
add wave -position end  sim:/integration_1/cs_ldd
add wave -position end  sim:/integration_1/cs_ldm
add wave -position end  sim:/integration_1/cs_mem_op
add wave -position end  sim:/integration_1/cs_mem_read
add wave -position end  sim:/integration_1/cs_mem_write
add wave -position end  sim:/integration_1/CS_NUM
add wave -position end  sim:/integration_1/cs_pop
add wave -position end  sim:/integration_1/cs_push
add wave -position end  sim:/integration_1/cs_reg_write
add wave -position end  sim:/integration_1/cs_reset
add wave -position end  sim:/integration_1/cs_ret
add wave -position end  sim:/integration_1/cs_rti
add wave -position end  sim:/integration_1/cs_setc
add wave -position end  sim:/integration_1/cs_std
add wave -position end  sim:/integration_1/d_alu_controls
add wave -position end  sim:/integration_1/d_alu_op
add wave -position end  sim:/integration_1/d_call
add wave -position end  sim:/integration_1/d_clrc
add wave -position end  sim:/integration_1/d_immediate
add wave -position end  sim:/integration_1/d_int
add wave -position end  sim:/integration_1/d_jc
add wave -position end  sim:/integration_1/d_jmp
add wave -position end  sim:/integration_1/d_jn
add wave -position end  sim:/integration_1/d_jz
add wave -position end  sim:/integration_1/d_ldd
add wave -position end  sim:/integration_1/d_ldm
add wave -position end  sim:/integration_1/d_mem_op
add wave -position end  sim:/integration_1/d_mem_read
add wave -position end  sim:/integration_1/d_mem_write
add wave -position end  sim:/integration_1/d_pop
add wave -position end  sim:/integration_1/d_push
add wave -position end  sim:/integration_1/d_read_add_2
add wave -position end  sim:/integration_1/d_read_data1
add wave -position end  sim:/integration_1/d_read_data2
add wave -position end  sim:/integration_1/d_reg_write
add wave -position end  sim:/integration_1/d_reset
add wave -position end  sim:/integration_1/d_ret
add wave -position end  sim:/integration_1/d_rti
add wave -position end  sim:/integration_1/d_setc
add wave -position end  sim:/integration_1/d_shamt
add wave -position end  sim:/integration_1/d_std
add wave -position end  sim:/integration_1/data
add wave -position end  sim:/integration_1/e_alu_op
add wave -position end  sim:/integration_1/e_call
add wave -position end  sim:/integration_1/e_clrc
add wave -position end  sim:/integration_1/e_flag
add wave -position end  sim:/integration_1/e_immediate
add wave -position end  sim:/integration_1/e_int
add wave -position end  sim:/integration_1/e_jc
add wave -position end  sim:/integration_1/e_jmp
add wave -position end  sim:/integration_1/e_jn
add wave -position end  sim:/integration_1/e_jz
add wave -position end  sim:/integration_1/e_ldd
add wave -position end  sim:/integration_1/e_ldm
add wave -position end  sim:/integration_1/e_mem_op
add wave -position end  sim:/integration_1/e_mem_read
add wave -position end  sim:/integration_1/e_mem_write
add wave -position end  sim:/integration_1/e_pop
add wave -position end  sim:/integration_1/e_push
add wave -position end  sim:/integration_1/e_read_add_2
add wave -position end  sim:/integration_1/e_read_data1
add wave -position end  sim:/integration_1/e_read_data2
add wave -position end  sim:/integration_1/e_reg_write
add wave -position end  sim:/integration_1/e_reset
add wave -position end  sim:/integration_1/e_result
add wave -position end  sim:/integration_1/e_ret
add wave -position end  sim:/integration_1/e_rti
add wave -position end  sim:/integration_1/e_setc
add wave -position end  sim:/integration_1/e_std
add wave -position end  sim:/integration_1/flag
add wave -position end  sim:/integration_1/flag_result
add wave -position end  sim:/integration_1/immediate
add wave -position end  sim:/integration_1/immediate_f
add wave -position end  sim:/integration_1/instuction
add wave -position end  sim:/integration_1/instuction_f
add wave -position end  sim:/integration_1/m_alu_op
add wave -position end  sim:/integration_1/m_call
add wave -position end  sim:/integration_1/m_clrc
add wave -position end  sim:/integration_1/m_data
add wave -position end  sim:/integration_1/m_immediate
add wave -position end  sim:/integration_1/m_int
add wave -position end  sim:/integration_1/m_jc
add wave -position end  sim:/integration_1/m_jmp
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: Asmaa Adel  Hostname: ASMAA-ADEL  ProcessID: 12536
#           Attempting to use alternate WLF file "./wlftsv8c7b".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlftsv8c7b
add wave -position end  sim:/integration_1/m_jn
add wave -position end  sim:/integration_1/m_jz
add wave -position end  sim:/integration_1/m_ldd
add wave -position end  sim:/integration_1/m_ldm
add wave -position end  sim:/integration_1/m_mem_op
add wave -position end  sim:/integration_1/m_pop
add wave -position end  sim:/integration_1/m_push
add wave -position end  sim:/integration_1/m_read_add_2
add wave -position end  sim:/integration_1/m_reg_write
add wave -position end  sim:/integration_1/m_reset
add wave -position end  sim:/integration_1/m_result
add wave -position end  sim:/integration_1/m_ret
add wave -position end  sim:/integration_1/m_rti
add wave -position end  sim:/integration_1/m_setc
add wave -position end  sim:/integration_1/m_std
add wave -position end  sim:/integration_1/mem_address
add wave -position end  sim:/integration_1/Num_alu
add wave -position end  sim:/integration_1/Num_of_bits
add wave -position end  sim:/integration_1/Num_of_registers
add wave -position end  sim:/integration_1/op2
add wave -position end  sim:/integration_1/op_code_width
add wave -position end  sim:/integration_1/pc
add wave -position end  sim:/integration_1/pc_modified
add wave -position end  sim:/integration_1/pc_width
add wave -position end  sim:/integration_1/pop_width
add wave -position end  sim:/integration_1/read_add_1
add wave -position end  sim:/integration_1/read_add_2
add wave -position end  sim:/integration_1/read_data1
add wave -position end  sim:/integration_1/read_data1_result
add wave -position end  sim:/integration_1/read_data2
add wave -position end  sim:/integration_1/read_data2_result
add wave -position end  sim:/integration_1/result
add wave -position end  sim:/integration_1/selector_1
add wave -position end  sim:/integration_1/selector_2
add wave -position end  sim:/integration_1/selector_3
add wave -position end  sim:/integration_1/selector_4
add wave -position end  sim:/integration_1/selector_5
add wave -position end  sim:/integration_1/selector_6
add wave -position end  sim:/integration_1/selector_7
add wave -position end  sim:/integration_1/sp
add wave -position end  sim:/integration_1/sp_jump
add wave -position end  sim:/integration_1/sp_width
add wave -position end  sim:/integration_1/value
add wave -position end  sim:/integration_1/write_data
add wave -position end  sim:/integration_1/z_value
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0000000000000111
# Compile of control_unit.v was successful.
vsim -gui work.integration_1
# End time: 10:02:58 on Nov 23,2022, Elapsed time: 0:01:08
# Errors: 0, Warnings: 5
# vsim -gui work.integration_1 
# Start time: 10:02:58 on Nov 23,2022
# Loading work.integration_1
# Loading work.instruction_memory
# Loading work.read_file
# Loading work.buffer
# Loading work.control_unit
# Loading work.decode_ciruit
# Loading work.alu
# Loading work.sign_extend
# Loading work.data_stack_memory
# Loading work.mux_generic
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
add wave -position end  sim:/integration_1/alu_controls
add wave -position end  sim:/integration_1/clk
add wave -position end  sim:/integration_1/cs_alu_op
add wave -position end  sim:/integration_1/cs_call
add wave -position end  sim:/integration_1/cs_clrc
add wave -position end  sim:/integration_1/cs_int
add wave -position end  sim:/integration_1/cs_jc
add wave -position end  sim:/integration_1/cs_jmp
add wave -position end  sim:/integration_1/cs_jn
add wave -position end  sim:/integration_1/cs_jz
add wave -position end  sim:/integration_1/cs_ldd
add wave -position end  sim:/integration_1/cs_ldm
add wave -position end  sim:/integration_1/cs_mem_op
add wave -position end  sim:/integration_1/cs_mem_read
add wave -position end  sim:/integration_1/cs_mem_write
add wave -position end  sim:/integration_1/CS_NUM
add wave -position end  sim:/integration_1/cs_pop
add wave -position end  sim:/integration_1/cs_push
add wave -position end  sim:/integration_1/cs_reg_write
add wave -position end  sim:/integration_1/cs_reset
add wave -position end  sim:/integration_1/cs_ret
add wave -position end  sim:/integration_1/cs_rti
add wave -position end  sim:/integration_1/cs_setc
add wave -position end  sim:/integration_1/cs_std
add wave -position end  sim:/integration_1/d_alu_controls
add wave -position end  sim:/integration_1/d_alu_op
add wave -position end  sim:/integration_1/d_call
add wave -position end  sim:/integration_1/d_clrc
add wave -position end  sim:/integration_1/d_immediate
add wave -position end  sim:/integration_1/d_int
add wave -position end  sim:/integration_1/d_jc
add wave -position end  sim:/integration_1/d_jmp
add wave -position end  sim:/integration_1/d_jn
add wave -position end  sim:/integration_1/d_jz
add wave -position end  sim:/integration_1/d_ldd
add wave -position end  sim:/integration_1/d_ldm
add wave -position end  sim:/integration_1/d_mem_op
add wave -position end  sim:/integration_1/d_mem_read
add wave -position end  sim:/integration_1/d_mem_write
add wave -position end  sim:/integration_1/d_pop
add wave -position end  sim:/integration_1/d_push
add wave -position end  sim:/integration_1/d_read_add_2
add wave -position end  sim:/integration_1/d_read_data1
add wave -position end  sim:/integration_1/d_read_data2
add wave -position end  sim:/integration_1/d_reg_write
add wave -position end  sim:/integration_1/d_reset
add wave -position end  sim:/integration_1/d_ret
add wave -position end  sim:/integration_1/d_rti
add wave -position end  sim:/integration_1/d_setc
add wave -position end  sim:/integration_1/d_shamt
add wave -position end  sim:/integration_1/d_std
add wave -position end  sim:/integration_1/data
add wave -position end  sim:/integration_1/e_alu_op
add wave -position end  sim:/integration_1/e_call
add wave -position end  sim:/integration_1/e_clrc
add wave -position end  sim:/integration_1/e_flag
add wave -position end  sim:/integration_1/e_immediate
add wave -position end  sim:/integration_1/e_int
add wave -position end  sim:/integration_1/e_jc
add wave -position end  sim:/integration_1/e_jmp
add wave -position end  sim:/integration_1/e_jn
add wave -position end  sim:/integration_1/e_jz
add wave -position end  sim:/integration_1/e_ldd
add wave -position end  sim:/integration_1/e_ldm
add wave -position end  sim:/integration_1/e_mem_op
add wave -position end  sim:/integration_1/e_mem_read
add wave -position end  sim:/integration_1/e_mem_write
add wave -position end  sim:/integration_1/e_pop
add wave -position end  sim:/integration_1/e_push
add wave -position end  sim:/integration_1/e_read_add_2
add wave -position end  sim:/integration_1/e_read_data1
add wave -position end  sim:/integration_1/e_read_data2
add wave -position end  sim:/integration_1/e_reg_write
add wave -position end  sim:/integration_1/e_reset
add wave -position end  sim:/integration_1/e_result
add wave -position end  sim:/integration_1/e_ret
add wave -position end  sim:/integration_1/e_rti
add wave -position end  sim:/integration_1/e_setc
add wave -position end  sim:/integration_1/e_std
add wave -position end  sim:/integration_1/flag
add wave -position end  sim:/integration_1/flag_result
add wave -position end  sim:/integration_1/immediate
add wave -position end  sim:/integration_1/immediate_f
add wave -position end  sim:/integration_1/instuction
add wave -position end  sim:/integration_1/instuction_f
add wave -position end  sim:/integration_1/m_alu_op
add wave -position end  sim:/integration_1/m_call
add wave -position end  sim:/integration_1/m_clrc
add wave -position end  sim:/integration_1/m_data
add wave -position end  sim:/integration_1/m_immediate
add wave -position end  sim:/integration_1/m_int
add wave -position end  sim:/integration_1/m_jc
add wave -position end  sim:/integration_1/m_jmp
add wave -position end  sim:/integration_1/m_jn
add wave -position end  sim:/integration_1/m_jz
add wave -position end  sim:/integration_1/m_ldd
add wave -position end  sim:/integration_1/m_ldm
add wave -position end  sim:/integration_1/m_mem_op
add wave -position end  sim:/integration_1/m_pop
add wave -position end  sim:/integration_1/m_push
add wave -position end  sim:/integration_1/m_read_add_2
add wave -position end  sim:/integration_1/m_reg_write
add wave -position end  sim:/integration_1/m_reset
add wave -position end  sim:/integration_1/m_result
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: Asmaa Adel  Hostname: ASMAA-ADEL  ProcessID: 12536
#           Attempting to use alternate WLF file "./wlftb28r7v".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlftb28r7v
add wave -position end  sim:/integration_1/m_ret
add wave -position end  sim:/integration_1/m_rti
add wave -position end  sim:/integration_1/m_setc
add wave -position end  sim:/integration_1/m_std
add wave -position end  sim:/integration_1/mem_address
add wave -position end  sim:/integration_1/Num_alu
add wave -position end  sim:/integration_1/Num_of_bits
add wave -position end  sim:/integration_1/Num_of_registers
add wave -position end  sim:/integration_1/op2
add wave -position end  sim:/integration_1/op_code_width
add wave -position end  sim:/integration_1/pc
add wave -position end  sim:/integration_1/pc_modified
add wave -position end  sim:/integration_1/pc_width
add wave -position end  sim:/integration_1/pop_width
add wave -position end  sim:/integration_1/read_add_1
add wave -position end  sim:/integration_1/read_add_2
add wave -position end  sim:/integration_1/read_data1
add wave -position end  sim:/integration_1/read_data1_result
add wave -position end  sim:/integration_1/read_data2
add wave -position end  sim:/integration_1/read_data2_result
add wave -position end  sim:/integration_1/result
add wave -position end  sim:/integration_1/selector_1
add wave -position end  sim:/integration_1/selector_2
add wave -position end  sim:/integration_1/selector_3
add wave -position end  sim:/integration_1/selector_4
add wave -position end  sim:/integration_1/selector_5
add wave -position end  sim:/integration_1/selector_6
add wave -position end  sim:/integration_1/selector_7
add wave -position end  sim:/integration_1/sp
add wave -position end  sim:/integration_1/sp_jump
add wave -position end  sim:/integration_1/sp_width
add wave -position end  sim:/integration_1/value
add wave -position end  sim:/integration_1/write_data
add wave -position end  sim:/integration_1/z_value
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0000000000000111
# Compile of integration_phase_1.v was successful.
vsim -gui work.integration_1
# End time: 10:05:48 on Nov 23,2022, Elapsed time: 0:02:50
# Errors: 0, Warnings: 5
# vsim -gui work.integration_1 
# Start time: 10:05:48 on Nov 23,2022
# Loading work.integration_1
# Loading work.instruction_memory
# Loading work.read_file
# Loading work.buffer
# Loading work.control_unit
# Loading work.decode_ciruit
# Loading work.alu
# Loading work.sign_extend
# Loading work.data_stack_memory
# Loading work.mux_generic
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
add wave -position end  sim:/integration_1/alu_controls
add wave -position end  sim:/integration_1/clk
add wave -position end  sim:/integration_1/cs_alu_op
add wave -position end  sim:/integration_1/cs_call
add wave -position end  sim:/integration_1/cs_clrc
add wave -position end  sim:/integration_1/cs_int
add wave -position end  sim:/integration_1/cs_jc
add wave -position end  sim:/integration_1/cs_jmp
add wave -position end  sim:/integration_1/cs_jn
add wave -position end  sim:/integration_1/cs_jz
add wave -position end  sim:/integration_1/cs_ldd
add wave -position end  sim:/integration_1/cs_ldm
add wave -position end  sim:/integration_1/cs_mem_op
add wave -position end  sim:/integration_1/cs_mem_read
add wave -position end  sim:/integration_1/cs_mem_write
add wave -position end  sim:/integration_1/CS_NUM
add wave -position end  sim:/integration_1/cs_pop
add wave -position end  sim:/integration_1/cs_push
add wave -position end  sim:/integration_1/cs_reg_write
add wave -position end  sim:/integration_1/cs_reset
add wave -position end  sim:/integration_1/cs_ret
add wave -position end  sim:/integration_1/cs_rti
add wave -position end  sim:/integration_1/cs_setc
add wave -position end  sim:/integration_1/cs_std
add wave -position end  sim:/integration_1/d_alu_controls
add wave -position end  sim:/integration_1/d_alu_op
add wave -position end  sim:/integration_1/d_call
add wave -position end  sim:/integration_1/d_clrc
add wave -position end  sim:/integration_1/d_immediate
add wave -position end  sim:/integration_1/d_int
add wave -position end  sim:/integration_1/d_jc
add wave -position end  sim:/integration_1/d_jmp
add wave -position end  sim:/integration_1/d_jn
add wave -position end  sim:/integration_1/d_jz
add wave -position end  sim:/integration_1/d_ldd
add wave -position end  sim:/integration_1/d_ldm
add wave -position end  sim:/integration_1/d_mem_op
add wave -position end  sim:/integration_1/d_mem_read
add wave -position end  sim:/integration_1/d_mem_write
add wave -position end  sim:/integration_1/d_pop
add wave -position end  sim:/integration_1/d_push
add wave -position end  sim:/integration_1/d_read_add_2
add wave -position end  sim:/integration_1/d_read_data1
add wave -position end  sim:/integration_1/d_read_data2
add wave -position end  sim:/integration_1/d_reg_write
add wave -position end  sim:/integration_1/d_reset
add wave -position end  sim:/integration_1/d_ret
add wave -position end  sim:/integration_1/d_rti
add wave -position end  sim:/integration_1/d_setc
add wave -position end  sim:/integration_1/d_shamt
add wave -position end  sim:/integration_1/d_std
add wave -position end  sim:/integration_1/data
add wave -position end  sim:/integration_1/e_alu_op
add wave -position end  sim:/integration_1/e_call
add wave -position end  sim:/integration_1/e_clrc
add wave -position end  sim:/integration_1/e_flag
add wave -position end  sim:/integration_1/e_immediate
add wave -position end  sim:/integration_1/e_int
add wave -position end  sim:/integration_1/e_jc
add wave -position end  sim:/integration_1/e_jmp
add wave -position end  sim:/integration_1/e_jn
add wave -position end  sim:/integration_1/e_jz
add wave -position end  sim:/integration_1/e_ldd
add wave -position end  sim:/integration_1/e_ldm
add wave -position end  sim:/integration_1/e_mem_op
add wave -position end  sim:/integration_1/e_mem_read
add wave -position end  sim:/integration_1/e_mem_write
add wave -position end  sim:/integration_1/e_pop
add wave -position end  sim:/integration_1/e_push
add wave -position end  sim:/integration_1/e_read_add_2
add wave -position end  sim:/integration_1/e_read_data1
add wave -position end  sim:/integration_1/e_read_data2
add wave -position end  sim:/integration_1/e_reg_write
add wave -position end  sim:/integration_1/e_reset
add wave -position end  sim:/integration_1/e_result
add wave -position end  sim:/integration_1/e_ret
add wave -position end  sim:/integration_1/e_rti
add wave -position end  sim:/integration_1/e_setc
add wave -position end  sim:/integration_1/e_std
add wave -position end  sim:/integration_1/flag
add wave -position end  sim:/integration_1/flag_result
add wave -position end  sim:/integration_1/immediate
add wave -position end  sim:/integration_1/immediate_f
add wave -position end  sim:/integration_1/instuction
add wave -position end  sim:/integration_1/instuction_f
add wave -position end  sim:/integration_1/m_alu_op
add wave -position end  sim:/integration_1/m_call
add wave -position end  sim:/integration_1/m_clrc
add wave -position end  sim:/integration_1/m_data
add wave -position end  sim:/integration_1/m_immediate
add wave -position end  sim:/integration_1/m_int
add wave -position end  sim:/integration_1/m_jc
add wave -position end  sim:/integration_1/m_jmp
add wave -position end  sim:/integration_1/m_jn
add wave -position end  sim:/integration_1/m_jz
add wave -position end  sim:/integration_1/m_ldd
add wave -position end  sim:/integration_1/m_ldm
add wave -position end  sim:/integration_1/m_mem_op
add wave -position end  sim:/integration_1/m_pop
add wave -position end  sim:/integration_1/m_push
add wave -position end  sim:/integration_1/m_read_add_2
add wave -position end  sim:/integration_1/m_reg_write
add wave -position end  sim:/integration_1/m_reset
add wave -position end  sim:/integration_1/m_result
add wave -position end  sim:/integration_1/m_ret
add wave -position end  sim:/integration_1/m_rti
add wave -position end  sim:/integration_1/m_setc
add wave -position end  sim:/integration_1/m_std
add wave -position end  sim:/integration_1/mem_address
add wave -position end  sim:/integration_1/Num_alu
add wave -position end  sim:/integration_1/Num_of_bits
add wave -position end  sim:/integration_1/Num_of_registers
add wave -position end  sim:/integration_1/op2
add wave -position end  sim:/integration_1/op_code_width
add wave -position end  sim:/integration_1/pc
add wave -position end  sim:/integration_1/pc_modified
add wave -position end  sim:/integration_1/pc_width
add wave -position end  sim:/integration_1/pop_width
add wave -position end  sim:/integration_1/read_add_1
add wave -position end  sim:/integration_1/read_add_2
add wave -position end  sim:/integration_1/read_data1
add wave -position end  sim:/integration_1/read_data1_result
add wave -position end  sim:/integration_1/read_data2
add wave -position end  sim:/integration_1/read_data2_result
add wave -position end  sim:/integration_1/result
add wave -position end  sim:/integration_1/selector_1
add wave -position end  sim:/integration_1/selector_2
add wave -position end  sim:/integration_1/selector_3
add wave -position end  sim:/integration_1/selector_4
add wave -position end  sim:/integration_1/selector_5
add wave -position end  sim:/integration_1/selector_6
add wave -position end  sim:/integration_1/selector_7
add wave -position end  sim:/integration_1/sp
add wave -position end  sim:/integration_1/sp_jump
add wave -position end  sim:/integration_1/sp_width
add wave -position end  sim:/integration_1/value
add wave -position end  sim:/integration_1/write_data
add wave -position end  sim:/integration_1/z_value
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: Asmaa Adel  Hostname: ASMAA-ADEL  ProcessID: 12536
#           Attempting to use alternate WLF file "./wlftz3ba29".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlftz3ba29
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0000000000000111
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0000000000000111
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0010100000000000
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0010100000000000
# 0000100001100000
# 0000000000000011
# 0010000001100000
# 0000000000000111
# 0001000101000000
# 0000000000000111
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0000100001100000
# 0000000000000011
# 0010000001100000
# 0001000101000000
add wave -position end  sim:/integration_1/cs_reg_write
add wave -position end  sim:/integration_1/decode_stage/array_reg
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0000100001100000
# 0000000000000011
# 0010000001100000
# 0001000101000000
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0000100001100000
# 0000000000000011
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010000001100000
# 0001000101000000
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# Compile of alu.v was successful.
vsim -gui work.integration_1
# End time: 10:48:57 on Nov 23,2022, Elapsed time: 0:43:09
# Errors: 0, Warnings: 3
# vsim -gui work.integration_1 
# Start time: 10:48:57 on Nov 23,2022
# Loading work.integration_1
# Loading work.instruction_memory
# Loading work.read_file
# Loading work.buffer
# Loading work.control_unit
# Loading work.decode_ciruit
# Loading work.alu
# Loading work.sign_extend
# Loading work.data_stack_memory
# Loading work.mux_generic
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
add wave -position end  sim:/integration_1/alu_controls
add wave -position end  sim:/integration_1/clk
add wave -position end  sim:/integration_1/cs_alu_op
add wave -position end  sim:/integration_1/cs_call
add wave -position end  sim:/integration_1/cs_clrc
add wave -position end  sim:/integration_1/cs_int
add wave -position end  sim:/integration_1/cs_jc
add wave -position end  sim:/integration_1/cs_jmp
add wave -position end  sim:/integration_1/cs_jn
add wave -position end  sim:/integration_1/cs_jz
add wave -position end  sim:/integration_1/cs_ldd
add wave -position end  sim:/integration_1/cs_ldm
add wave -position end  sim:/integration_1/cs_mem_op
add wave -position end  sim:/integration_1/cs_mem_read
add wave -position end  sim:/integration_1/cs_mem_write
add wave -position end  sim:/integration_1/CS_NUM
add wave -position end  sim:/integration_1/cs_pop
add wave -position end  sim:/integration_1/cs_push
add wave -position end  sim:/integration_1/cs_reg_write
add wave -position end  sim:/integration_1/cs_reset
add wave -position end  sim:/integration_1/cs_ret
add wave -position end  sim:/integration_1/cs_rti
add wave -position end  sim:/integration_1/cs_setc
add wave -position end  sim:/integration_1/cs_std
add wave -position end  sim:/integration_1/d_alu_controls
add wave -position end  sim:/integration_1/d_alu_op
add wave -position end  sim:/integration_1/d_call
add wave -position end  sim:/integration_1/d_clrc
add wave -position end  sim:/integration_1/d_immediate
add wave -position end  sim:/integration_1/d_int
add wave -position end  sim:/integration_1/d_jc
add wave -position end  sim:/integration_1/d_jmp
add wave -position end  sim:/integration_1/d_jn
add wave -position end  sim:/integration_1/d_jz
add wave -position end  sim:/integration_1/d_ldd
add wave -position end  sim:/integration_1/d_ldm
add wave -position end  sim:/integration_1/d_mem_op
add wave -position end  sim:/integration_1/d_mem_read
add wave -position end  sim:/integration_1/d_mem_write
add wave -position end  sim:/integration_1/d_pop
add wave -position end  sim:/integration_1/d_push
add wave -position end  sim:/integration_1/d_read_add_2
add wave -position end  sim:/integration_1/d_read_data1
add wave -position end  sim:/integration_1/d_read_data2
add wave -position end  sim:/integration_1/d_reg_write
add wave -position end  sim:/integration_1/d_reset
add wave -position end  sim:/integration_1/d_ret
add wave -position end  sim:/integration_1/d_rti
add wave -position end  sim:/integration_1/d_setc
add wave -position end  sim:/integration_1/d_shamt
add wave -position end  sim:/integration_1/d_std
add wave -position end  sim:/integration_1/data
add wave -position end  sim:/integration_1/e_alu_op
add wave -position end  sim:/integration_1/e_call
add wave -position end  sim:/integration_1/e_clrc
add wave -position end  sim:/integration_1/e_flag
add wave -position end  sim:/integration_1/e_immediate
add wave -position end  sim:/integration_1/e_int
add wave -position end  sim:/integration_1/e_jc
add wave -position end  sim:/integration_1/e_jmp
add wave -position end  sim:/integration_1/e_jn
add wave -position end  sim:/integration_1/e_jz
add wave -position end  sim:/integration_1/e_ldd
add wave -position end  sim:/integration_1/e_ldm
add wave -position end  sim:/integration_1/e_mem_op
add wave -position end  sim:/integration_1/e_mem_read
add wave -position end  sim:/integration_1/e_mem_write
add wave -position end  sim:/integration_1/e_pop
add wave -position end  sim:/integration_1/e_push
add wave -position end  sim:/integration_1/e_read_add_2
add wave -position end  sim:/integration_1/e_read_data1
add wave -position end  sim:/integration_1/e_read_data2
add wave -position end  sim:/integration_1/e_reg_write
add wave -position end  sim:/integration_1/e_reset
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: Asmaa Adel  Hostname: ASMAA-ADEL  ProcessID: 12536
#           Attempting to use alternate WLF file "./wlftgr6n4h".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlftgr6n4h
add wave -position end  sim:/integration_1/e_result
add wave -position end  sim:/integration_1/e_ret
add wave -position end  sim:/integration_1/e_rti
add wave -position end  sim:/integration_1/e_setc
add wave -position end  sim:/integration_1/e_std
add wave -position end  sim:/integration_1/flag
add wave -position end  sim:/integration_1/flag_result
add wave -position end  sim:/integration_1/immediate
add wave -position end  sim:/integration_1/immediate_f
add wave -position end  sim:/integration_1/instuction
add wave -position end  sim:/integration_1/instuction_f
add wave -position end  sim:/integration_1/m_alu_op
add wave -position end  sim:/integration_1/m_call
add wave -position end  sim:/integration_1/m_clrc
add wave -position end  sim:/integration_1/m_data
add wave -position end  sim:/integration_1/m_immediate
add wave -position end  sim:/integration_1/m_int
add wave -position end  sim:/integration_1/m_jc
add wave -position end  sim:/integration_1/m_jmp
add wave -position end  sim:/integration_1/m_jn
add wave -position end  sim:/integration_1/m_jz
add wave -position end  sim:/integration_1/m_ldd
add wave -position end  sim:/integration_1/m_ldm
add wave -position end  sim:/integration_1/m_mem_op
add wave -position end  sim:/integration_1/m_pop
add wave -position end  sim:/integration_1/m_push
add wave -position end  sim:/integration_1/m_read_add_2
add wave -position end  sim:/integration_1/m_reg_write
add wave -position end  sim:/integration_1/m_reset
add wave -position end  sim:/integration_1/m_result
add wave -position end  sim:/integration_1/m_ret
add wave -position end  sim:/integration_1/m_rti
add wave -position end  sim:/integration_1/m_setc
add wave -position end  sim:/integration_1/m_std
add wave -position end  sim:/integration_1/mem_address
add wave -position end  sim:/integration_1/Num_alu
add wave -position end  sim:/integration_1/Num_of_bits
add wave -position end  sim:/integration_1/Num_of_registers
add wave -position end  sim:/integration_1/op2
add wave -position end  sim:/integration_1/op_code_width
add wave -position end  sim:/integration_1/pc
add wave -position end  sim:/integration_1/pc_modified
add wave -position end  sim:/integration_1/pc_width
add wave -position end  sim:/integration_1/pop_width
add wave -position end  sim:/integration_1/read_add_1
add wave -position end  sim:/integration_1/read_add_2
add wave -position end  sim:/integration_1/read_data1
add wave -position end  sim:/integration_1/read_data1_result
add wave -position end  sim:/integration_1/read_data2
add wave -position end  sim:/integration_1/read_data2_result
add wave -position end  sim:/integration_1/result
add wave -position end  sim:/integration_1/selector_1
add wave -position end  sim:/integration_1/selector_2
add wave -position end  sim:/integration_1/selector_3
add wave -position end  sim:/integration_1/selector_4
add wave -position end  sim:/integration_1/selector_5
add wave -position end  sim:/integration_1/selector_6
add wave -position end  sim:/integration_1/selector_7
add wave -position end  sim:/integration_1/sp
add wave -position end  sim:/integration_1/sp_jump
add wave -position end  sim:/integration_1/sp_width
add wave -position end  sim:/integration_1/value
add wave -position end  sim:/integration_1/write_data
add wave -position end  sim:/integration_1/z_value
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
add wave -position end  sim:/integration_1/decode_stage/array_reg
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0000000000000000
# 0000000000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0000100001100000
# 0000000000000011
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010000001100000
# 0001000101000000
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0010100000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0000100001100000
# 0000000000000011
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010000001100000
# 0001000101000000
vsim -gui work.integration_1
# End time: 11:00:03 on Nov 23,2022, Elapsed time: 0:11:06
# Errors: 0, Warnings: 2
# vsim -gui work.integration_1 
# Start time: 11:00:03 on Nov 23,2022
# Loading work.integration_1
# Loading work.instruction_memory
# Loading work.read_file
# Loading work.buffer
# Loading work.control_unit
# Loading work.decode_ciruit
# Loading work.alu
# Loading work.sign_extend
# Loading work.data_stack_memory
# Loading work.mux_generic
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
add wave -position end  sim:/integration_1/clk
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: Asmaa Adel  Hostname: ASMAA-ADEL  ProcessID: 12536
#           Attempting to use alternate WLF file "./wlftvb9jxk".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlftvb9jxk
add wave -position end  sim:/integration_1/result
add wave -position end  sim:/integration_1/decode_stage/array_reg
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0010100000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0000100001100000
# 0000000000000011
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0010100000000000
# 0010000001100000
# 0001000101000000
add wave -position end  sim:/integration_1/alu_controls
add wave -position end  sim:/integration_1/clk
add wave -position end  sim:/integration_1/cs_alu_op
add wave -position end  sim:/integration_1/cs_call
add wave -position end  sim:/integration_1/cs_clrc
add wave -position end  sim:/integration_1/cs_int
add wave -position end  sim:/integration_1/cs_jc
add wave -position end  sim:/integration_1/cs_jmp
add wave -position end  sim:/integration_1/cs_jn
add wave -position end  sim:/integration_1/cs_jz
add wave -position end  sim:/integration_1/cs_ldd
add wave -position end  sim:/integration_1/cs_ldm
add wave -position end  sim:/integration_1/cs_mem_op
add wave -position end  sim:/integration_1/cs_mem_read
add wave -position end  sim:/integration_1/cs_mem_write
add wave -position end  sim:/integration_1/CS_NUM
add wave -position end  sim:/integration_1/cs_pop
add wave -position end  sim:/integration_1/cs_push
add wave -position end  sim:/integration_1/cs_reg_write
add wave -position end  sim:/integration_1/cs_reset
add wave -position end  sim:/integration_1/cs_ret
add wave -position end  sim:/integration_1/cs_rti
add wave -position end  sim:/integration_1/cs_setc
add wave -position end  sim:/integration_1/cs_std
add wave -position end  sim:/integration_1/d_alu_controls
add wave -position end  sim:/integration_1/d_alu_op
add wave -position end  sim:/integration_1/d_call
add wave -position end  sim:/integration_1/d_clrc
add wave -position end  sim:/integration_1/d_immediate
add wave -position end  sim:/integration_1/d_int
add wave -position end  sim:/integration_1/d_jc
add wave -position end  sim:/integration_1/d_jmp
add wave -position end  sim:/integration_1/d_jn
add wave -position end  sim:/integration_1/d_jz
add wave -position end  sim:/integration_1/d_ldd
add wave -position end  sim:/integration_1/d_ldm
add wave -position end  sim:/integration_1/d_mem_op
add wave -position end  sim:/integration_1/d_mem_read
add wave -position end  sim:/integration_1/d_mem_write
add wave -position end  sim:/integration_1/d_pop
add wave -position end  sim:/integration_1/d_push
add wave -position end  sim:/integration_1/d_read_add_2
add wave -position end  sim:/integration_1/d_read_data1
add wave -position end  sim:/integration_1/d_read_data2
add wave -position end  sim:/integration_1/d_reg_write
add wave -position end  sim:/integration_1/d_reset
add wave -position end  sim:/integration_1/d_ret
add wave -position end  sim:/integration_1/d_rti
add wave -position end  sim:/integration_1/d_setc
add wave -position end  sim:/integration_1/d_shamt
add wave -position end  sim:/integration_1/d_std
add wave -position end  sim:/integration_1/data
add wave -position end  sim:/integration_1/e_alu_op
add wave -position end  sim:/integration_1/e_call
add wave -position end  sim:/integration_1/e_clrc
add wave -position end  sim:/integration_1/e_flag
add wave -position end  sim:/integration_1/e_immediate
add wave -position end  sim:/integration_1/e_int
add wave -position end  sim:/integration_1/e_jc
add wave -position end  sim:/integration_1/e_jmp
add wave -position end  sim:/integration_1/e_jn
add wave -position end  sim:/integration_1/e_jz
add wave -position end  sim:/integration_1/e_ldd
add wave -position end  sim:/integration_1/e_ldm
add wave -position end  sim:/integration_1/e_mem_op
add wave -position end  sim:/integration_1/e_mem_read
add wave -position end  sim:/integration_1/e_mem_write
add wave -position end  sim:/integration_1/e_pop
add wave -position end  sim:/integration_1/e_push
add wave -position end  sim:/integration_1/e_read_add_2
add wave -position end  sim:/integration_1/e_read_data1
add wave -position end  sim:/integration_1/e_read_data2
add wave -position end  sim:/integration_1/e_reg_write
add wave -position end  sim:/integration_1/e_reset
add wave -position end  sim:/integration_1/e_result
add wave -position end  sim:/integration_1/e_ret
add wave -position end  sim:/integration_1/e_rti
add wave -position end  sim:/integration_1/e_setc
add wave -position end  sim:/integration_1/e_std
add wave -position end  sim:/integration_1/flag
add wave -position end  sim:/integration_1/flag_result
add wave -position end  sim:/integration_1/immediate
add wave -position end  sim:/integration_1/immediate_f
add wave -position end  sim:/integration_1/instuction
add wave -position end  sim:/integration_1/instuction_f
add wave -position end  sim:/integration_1/m_alu_op
add wave -position end  sim:/integration_1/m_call
add wave -position end  sim:/integration_1/m_clrc
add wave -position end  sim:/integration_1/m_data
add wave -position end  sim:/integration_1/m_immediate
add wave -position end  sim:/integration_1/m_int
add wave -position end  sim:/integration_1/m_jc
add wave -position end  sim:/integration_1/m_jmp
add wave -position end  sim:/integration_1/m_jn
add wave -position end  sim:/integration_1/m_jz
add wave -position end  sim:/integration_1/m_ldd
add wave -position end  sim:/integration_1/m_ldm
add wave -position end  sim:/integration_1/m_mem_op
add wave -position end  sim:/integration_1/m_pop
add wave -position end  sim:/integration_1/m_push
add wave -position end  sim:/integration_1/m_read_add_2
add wave -position end  sim:/integration_1/m_reg_write
add wave -position end  sim:/integration_1/m_reset
add wave -position end  sim:/integration_1/m_result
add wave -position end  sim:/integration_1/m_ret
add wave -position end  sim:/integration_1/m_rti
add wave -position end  sim:/integration_1/m_setc
add wave -position end  sim:/integration_1/m_std
add wave -position end  sim:/integration_1/mem_address
add wave -position end  sim:/integration_1/Num_alu
add wave -position end  sim:/integration_1/Num_of_bits
add wave -position end  sim:/integration_1/Num_of_registers
add wave -position end  sim:/integration_1/op2
add wave -position end  sim:/integration_1/op_code_width
add wave -position end  sim:/integration_1/pc
add wave -position end  sim:/integration_1/pc_modified
add wave -position end  sim:/integration_1/pc_width
add wave -position end  sim:/integration_1/pop_width
add wave -position end  sim:/integration_1/read_add_1
add wave -position end  sim:/integration_1/read_add_2
add wave -position end  sim:/integration_1/read_data1
add wave -position end  sim:/integration_1/read_data1_result
add wave -position end  sim:/integration_1/read_data2
add wave -position end  sim:/integration_1/read_data2_result
add wave -position end  sim:/integration_1/result
add wave -position end  sim:/integration_1/selector_1
add wave -position end  sim:/integration_1/selector_2
add wave -position end  sim:/integration_1/selector_3
add wave -position end  sim:/integration_1/selector_4
add wave -position end  sim:/integration_1/selector_5
add wave -position end  sim:/integration_1/selector_6
add wave -position end  sim:/integration_1/selector_7
add wave -position end  sim:/integration_1/sp
add wave -position end  sim:/integration_1/sp_jump
add wave -position end  sim:/integration_1/sp_width
add wave -position end  sim:/integration_1/value
add wave -position end  sim:/integration_1/write_data
add wave -position end  sim:/integration_1/z_value
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0010100000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0000100001100000
# 0000000000000011
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0010100000000000
# 0010000001100000
# 0001000101000000
add wave -position end  sim:/integration_1/decode_stage/array_reg
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0010100000000000
# 0000100001100000
# 0000000000000011
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010000001100000
# Compile of alu.v was successful.
# Compile of control_unit.v was successful.
# Compile of instruction_memory.v was successful.
# Compile of read_file.v was successful.
# Compile of data_stack_memory.v was successful.
# Compile of integration_file.v was successful.
# Compile of decode_ciruit.v was successful.
# Compile of mux_generic.v was successful.
# Compile of sign_extend.v was successful.
# Compile of integration_phase_1.v was successful.
# Compile of buffer.v was successful.
# 11 compiles, 0 failed with no errors.
vsim -gui work.integration_1
# End time: 11:24:03 on Nov 23,2022, Elapsed time: 0:24:00
# Errors: 0, Warnings: 3
# vsim -gui work.integration_1 
# Start time: 11:24:03 on Nov 23,2022
# Loading work.integration_1
# Loading work.instruction_memory
# Loading work.read_file
# Loading work.buffer
# Loading work.control_unit
# Loading work.decode_ciruit
# Loading work.alu
# Loading work.sign_extend
# Loading work.data_stack_memory
# Loading work.mux_generic
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
add wave -position end  sim:/integration_1/alu_controls
add wave -position end  sim:/integration_1/clk
add wave -position end  sim:/integration_1/cs_alu_op
add wave -position end  sim:/integration_1/cs_call
add wave -position end  sim:/integration_1/cs_clrc
add wave -position end  sim:/integration_1/cs_int
add wave -position end  sim:/integration_1/cs_jc
add wave -position end  sim:/integration_1/cs_jmp
add wave -position end  sim:/integration_1/cs_jn
add wave -position end  sim:/integration_1/cs_jz
add wave -position end  sim:/integration_1/cs_ldd
add wave -position end  sim:/integration_1/cs_ldm
add wave -position end  sim:/integration_1/cs_mem_op
add wave -position end  sim:/integration_1/cs_mem_read
add wave -position end  sim:/integration_1/cs_mem_write
add wave -position end  sim:/integration_1/CS_NUM
add wave -position end  sim:/integration_1/cs_pop
add wave -position end  sim:/integration_1/cs_push
add wave -position end  sim:/integration_1/cs_reg_write
add wave -position end  sim:/integration_1/cs_reset
add wave -position end  sim:/integration_1/cs_ret
add wave -position end  sim:/integration_1/cs_rti
add wave -position end  sim:/integration_1/cs_setc
add wave -position end  sim:/integration_1/cs_std
add wave -position end  sim:/integration_1/d_alu_controls
add wave -position end  sim:/integration_1/d_alu_op
add wave -position end  sim:/integration_1/d_call
add wave -position end  sim:/integration_1/d_clrc
add wave -position end  sim:/integration_1/d_immediate
add wave -position end  sim:/integration_1/d_int
add wave -position end  sim:/integration_1/d_jc
add wave -position end  sim:/integration_1/d_jmp
add wave -position end  sim:/integration_1/d_jn
add wave -position end  sim:/integration_1/d_jz
add wave -position end  sim:/integration_1/d_ldd
add wave -position end  sim:/integration_1/d_ldm
add wave -position end  sim:/integration_1/d_mem_op
add wave -position end  sim:/integration_1/d_mem_read
add wave -position end  sim:/integration_1/d_mem_write
add wave -position end  sim:/integration_1/d_pop
add wave -position end  sim:/integration_1/d_push
add wave -position end  sim:/integration_1/d_read_add_2
add wave -position end  sim:/integration_1/d_read_data1
add wave -position end  sim:/integration_1/d_read_data2
add wave -position end  sim:/integration_1/d_reg_write
add wave -position end  sim:/integration_1/d_reset
add wave -position end  sim:/integration_1/d_ret
add wave -position end  sim:/integration_1/d_rti
add wave -position end  sim:/integration_1/d_setc
add wave -position end  sim:/integration_1/d_shamt
add wave -position end  sim:/integration_1/d_std
add wave -position end  sim:/integration_1/data
add wave -position end  sim:/integration_1/e_alu_op
add wave -position end  sim:/integration_1/e_call
add wave -position end  sim:/integration_1/e_clrc
add wave -position end  sim:/integration_1/e_flag
add wave -position end  sim:/integration_1/e_immediate
add wave -position end  sim:/integration_1/e_int
add wave -position end  sim:/integration_1/e_jc
add wave -position end  sim:/integration_1/e_jmp
add wave -position end  sim:/integration_1/e_jn
add wave -position end  sim:/integration_1/e_jz
add wave -position end  sim:/integration_1/e_ldd
add wave -position end  sim:/integration_1/e_ldm
add wave -position end  sim:/integration_1/e_mem_op
add wave -position end  sim:/integration_1/e_mem_read
add wave -position end  sim:/integration_1/e_mem_write
add wave -position end  sim:/integration_1/e_pop
add wave -position end  sim:/integration_1/e_push
add wave -position end  sim:/integration_1/e_read_add_2
add wave -position end  sim:/integration_1/e_read_data1
add wave -position end  sim:/integration_1/e_read_data2
add wave -position end  sim:/integration_1/e_reg_write
add wave -position end  sim:/integration_1/e_reset
add wave -position end  sim:/integration_1/e_result
add wave -position end  sim:/integration_1/e_ret
add wave -position end  sim:/integration_1/e_rti
add wave -position end  sim:/integration_1/e_setc
add wave -position end  sim:/integration_1/e_std
add wave -position end  sim:/integration_1/flag
add wave -position end  sim:/integration_1/flag_result
add wave -position end  sim:/integration_1/immediate
add wave -position end  sim:/integration_1/immediate_f
add wave -position end  sim:/integration_1/instuction
add wave -position end  sim:/integration_1/instuction_f
add wave -position end  sim:/integration_1/m_alu_op
add wave -position end  sim:/integration_1/m_call
add wave -position end  sim:/integration_1/m_clrc
add wave -position end  sim:/integration_1/m_data
add wave -position end  sim:/integration_1/m_immediate
add wave -position end  sim:/integration_1/m_int
add wave -position end  sim:/integration_1/m_jc
add wave -position end  sim:/integration_1/m_jmp
add wave -position end  sim:/integration_1/m_jn
add wave -position end  sim:/integration_1/m_jz
add wave -position end  sim:/integration_1/m_ldd
add wave -position end  sim:/integration_1/m_ldm
add wave -position end  sim:/integration_1/m_mem_op
add wave -position end  sim:/integration_1/m_pop
add wave -position end  sim:/integration_1/m_push
add wave -position end  sim:/integration_1/m_read_add_2
add wave -position end  sim:/integration_1/m_reg_write
add wave -position end  sim:/integration_1/m_reset
add wave -position end  sim:/integration_1/m_result
add wave -position end  sim:/integration_1/m_ret
add wave -position end  sim:/integration_1/m_rti
add wave -position end  sim:/integration_1/m_setc
add wave -position end  sim:/integration_1/m_std
add wave -position end  sim:/integration_1/mem_address
add wave -position end  sim:/integration_1/Num_alu
add wave -position end  sim:/integration_1/Num_of_bits
add wave -position end  sim:/integration_1/Num_of_registers
add wave -position end  sim:/integration_1/op2
add wave -position end  sim:/integration_1/op_code_width
add wave -position end  sim:/integration_1/pc
add wave -position end  sim:/integration_1/pc_modified
add wave -position end  sim:/integration_1/pc_width
add wave -position end  sim:/integration_1/pop_width
add wave -position end  sim:/integration_1/read_add_1
add wave -position end  sim:/integration_1/read_add_2
add wave -position end  sim:/integration_1/read_data1
add wave -position end  sim:/integration_1/read_data1_result
add wave -position end  sim:/integration_1/read_data2
add wave -position end  sim:/integration_1/read_data2_result
add wave -position end  sim:/integration_1/result
add wave -position end  sim:/integration_1/selector_1
add wave -position end  sim:/integration_1/selector_2
add wave -position end  sim:/integration_1/selector_3
add wave -position end  sim:/integration_1/selector_4
add wave -position end  sim:/integration_1/selector_5
add wave -position end  sim:/integration_1/selector_6
add wave -position end  sim:/integration_1/selector_7
add wave -position end  sim:/integration_1/sp
add wave -position end  sim:/integration_1/sp_jump
add wave -position end  sim:/integration_1/sp_width
add wave -position end  sim:/integration_1/value
add wave -position end  sim:/integration_1/write_data
add wave -position end  sim:/integration_1/z_value
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: Asmaa Adel  Hostname: ASMAA-ADEL  ProcessID: 12536
#           Attempting to use alternate WLF file "./wlft4ckbgy".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlft4ckbgy
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0010100000000000
# 0000100001100000
# 0000000000000011
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010100000000000
# 0010000001100000
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0010100000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0000100001100000
# 0000000000000011
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0010100000000000
# 0010000001100000
# 0001000101000000
add wave -position end  sim:/integration_1/decode_stage/array_reg
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0010100000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0000100001100000
# 0000000000000011
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0010100000000000
# 0010000001100000
# 0001000101000000
add wave -position end  sim:/integration_1/memory_stage/array_reg
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
noforce sim:/integration_1/clk
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0010100000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0000100001100000
# 0000000000000011
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0010100000000000
# 0010000001100000
# 0001000101000000
# Compile of alu.v was successful.
# Compile of control_unit.v was successful.
# Compile of instruction_memory.v was successful.
# Compile of read_file.v was successful.
# Compile of data_stack_memory.v was successful.
# Compile of integration_file.v was successful.
# Compile of decode_ciruit.v was successful.
# Compile of mux_generic.v was successful.
# Compile of sign_extend.v was successful.
# Compile of integration_phase_1.v was successful.
# Compile of buffer.v was successful.
# 11 compiles, 0 failed with no errors.
vsim -gui work.integration_1
# End time: 14:25:58 on Nov 23,2022, Elapsed time: 3:01:55
# Errors: 0, Warnings: 3
# vsim -gui work.integration_1 
# Start time: 14:25:59 on Nov 23,2022
# Loading work.integration_1
# Loading work.instruction_memory
# Loading work.read_file
# Loading work.buffer
# Loading work.control_unit
# Loading work.decode_ciruit
# Loading work.alu
# Loading work.sign_extend
# Loading work.data_stack_memory
# Loading work.mux_generic
# ** Warning: (vsim-PLI-3691) Expected a system task, not a system function '$fscanf'.
#    Time: 0 ps  Iteration: 0  Instance: /integration_1/inst_mem_stage/read File: D:/CUFE24/3rd year/first term/Computer Architecture/Five-stages-Pipeline-Processor/read_file.v Line: 13
add wave -position end  sim:/integration_1/clk
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: Asmaa Adel  Hostname: ASMAA-ADEL  ProcessID: 12536
#           Attempting to use alternate WLF file "./wlft9c83id".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlft9c83id
add wave -position end  sim:/integration_1/memory_stage/array_reg
force -freeze sim:/integration_1/clk 0 0, 1 {50 ps} -r 100
run
# 0010100000000000
# 0000100000100000
# 0000000000000001
# 0000100001000000
# 0000000000000010
# 0000100001100000
# 0000000000000011
# 0010100000000000
# 0010100000000000
# 0001100101000000
# 0010100000000000
# 0010000001100000
# 0001001000100000
