module integration (/*input, output later*/); 
localparam Num_of_registers=6  //////////must be 20
wire pc=2**5; ///////how to start from 2**5
wire sp=2**11 -1;
wire clk;
instruction_memory #(16,32,Num_of_registers) inst_mem_stage ( .clk(clk),.pc(pc),.instuction(instuction),.immediate(immediate));

control_unit #(5,13,34)(op_code,alu_controls,cs_push,cs_pop,cs_ldm,cs_ldd,cs_std,cs_jz,cs_jn,cs_jc,cs_jmp,
                        cs_call,cs_ret,cs_rti,cs_setc,cs_clrc,cs_mem_read,cs_mem_write,cs_reg_write,cs_int,cs_reset,
                        cs_alu_op,cs_mem_op);

decode_ciruit #(16,3) decode_stage (.clk(clk) ,.write_enable(write_enable),.write_data(write_data),
                              .write_address(write_address),.read_address1(read_address1),
                              .read_address2(read_address2),.read_data1(read_data1), .read_data2(read_data2));

alu alu_stage(.op1(op1),.op2(op2),.shamt(shamt),.alu_operation(alu_operation),.flag(flage),.result(result));

data_stack_memory #(16,32,11) memory_stage (.clk(clk) ,.write_enable(write_enable),.read_enable(read_enable),
                                            .write_data(write_data) ,.address(address),.read_data(read_data));

endmodule